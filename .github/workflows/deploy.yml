name: Deploy Application

on:
  push:
    branches: [ main ]
    paths: [ 'app/**' ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Get EC2 instance info
      run: |
        INSTANCE_IP=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=demo-web-server" "Name=instance-state-name,Values=running" \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)
        echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
    
    - name: Setup SSH key
      run: |
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > demo-key
        chmod 600 demo-key
    
    - name: Build and deploy
      run: |
        # Copy files to EC2
        scp -i demo-key -o StrictHostKeyChecking=no -r app/ ec2-user@${{ env.INSTANCE_IP }}:/home/ec2-user/
        
        # Deploy on EC2
        ssh -i demo-key -o StrictHostKeyChecking=no ec2-user@${{ env.INSTANCE_IP }} << 'EOF'
          cd /home/ec2-user/app
          sudo docker build -t demo-app .
          sudo docker stop demo-app || true
          sudo docker rm demo-app || true
          sudo docker run -d --name demo-app -p 3000:3000 demo-app
        EOF